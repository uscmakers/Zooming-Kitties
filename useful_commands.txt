JETSON IP ADDRESS:
ssh zk@172.20.10.2

To find available ports:
ls -lt /dev/tty*
dmesg | grep tty

version: Rover-4.2.3

sudo mavproxy.py --master /dev/ttyACM0 --baudrate 115200

command to test vehicle simulation: /Documents/zk/ardupilot/Tools/autotest

./sim_vehicle.py -L OKrover --map --console

ERROR MESSAGE FROM RUNNING motor_control_basic.txt on 3/8/23:
zk@zk-desktop:~/Documents/Zooming-Kitties$ sudo python motor_control_basic.py 
Successfully connected to vehicle at /dev/ttyACM0!
GST_ARGUS: Creating output stream
CONSUMER: Waiting until producer is connected...
GST_ARGUS: Available Sensor modes :
GST_ARGUS: 3264 x 2464 FR = 21.000000 fps Duration = 47619048 ; Analog Gain range min 1.000000, max 10.625000; Exposure Range min 13000, max 683709000;

GST_ARGUS: 3264 x 1848 FR = 28.000001 fps Duration = 35714284 ; Analog Gain range min 1.000000, max 10.625000; Exposure Range min 13000, max 683709000;

GST_ARGUS: 1920 x 1080 FR = 29.999999 fps Duration = 33333334 ; Analog Gain range min 1.000000, max 10.625000; Exposure Range min 13000, max 683709000;

GST_ARGUS: 1640 x 1232 FR = 29.999999 fps Duration = 33333334 ; Analog Gain range min 1.000000, max 10.625000; Exposure Range min 13000, max 683709000;

GST_ARGUS: 1280 x 720 FR = 59.999999 fps Duration = 16666667 ; Analog Gain range min 1.000000, max 10.625000; Exposure Range min 13000, max 683709000;

GST_ARGUS: 1280 x 720 FR = 120.000005 fps Duration = 8333333 ; Analog Gain range min 1.000000, max 10.625000; Exposure Range min 13000, max 683709000;

GST_ARGUS: Running with following settings:
   Camera index = 0 
   Camera mode  = 2 
   Output Stream W = 1920 H = 1080 
   seconds to Run    = 0 
   Frame Rate = 29.999999 
GST_ARGUS: Setup Complete, Starting captures for 0 seconds
GST_ARGUS: Starting repeat capture requests.
CONSUMER: Producer has connected; continuing.
[ WARN:0] global /home/nvidia/host/build_opencv/nv_opencv/modules/videoio/src/cap_gstreamer.cpp (933) open OpenCV | GStreamer warning: Cannot query video position: status=0, value=-1, duration=-1
^CGST_ARGUS: Cleaning up
CONSUMER: Done Success
GST_ARGUS: Done Success
Traceback (most recent call last):
  File "motor_control_basic.py", line 102, in <module>
    face_detect()
  File "motor_control_basic.py", line 67, in face_detect
    faces = face_cascade.detectMultiScale(gray, 1.3, 5)
KeyboardInterrupt
zk@zk-desktop:~/Documents/Zooming-Kitties$ 

